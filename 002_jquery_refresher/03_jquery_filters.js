import $ from 'jquery';

// Задачи на работу с набором
//  Найдите все <li>, исключив из набора <li> с классом test.
$('li').not('.test');

//  Найдите первый <li> в наборе.
$('li').first();

//  Найдите последний <li> в наборе.
$('li').last();

//  Найдите пятый <li> в наборе.
$('li').eq(4);

//  Найдите предпоследний <li> в наборе.
$('li').eq(-2);

//  Найдите с 3-го по 10-тый <li> в наборе.
$('li').slice(2, 10);

//  Найдите все <li> затем с помощью filter выберите все li с классом .www.
$('li').filter('.www');

// Задачи на соседей
// Для решения задач данного блока вам понадобятся следующие методы: not, next, prev, nextAll, prevAll, nextUntil, prevUntil, siblings.
//  Найдите первый элемент, который стоит непосредственно за элементом с классом test.
$('.test').next();

//  Найдите первый элемент, который стоит непосредственно перед элементом с классом test.
$('.test').prev();

//  Найдите все элементы, которые идут непосредственно за элементом с классом test.
$('.test').nextAll();

//  Найдите все элементы, которые идут непосредственно перед элементом с классом test.
$('.test').prevAll();

//  Найдите все элементы, которые лежат между элементом с классом www и элементом с классом test через nextUntil.
$('.www').nextUntil('.test');

//  Найдите все элементы, которые лежат между элементом с классом test и элементом с классом www через prevUntil.
$('.www').prevUntil('.test');

//  Найдите всех соседей <li> с классом www.
$('li.www').siblings();

//  Найдите всех соседей <li> с классом www, которые (соседи) имеют класс test.
$('li.www').siblings('.test');

//  Найдите всех соседей <li> с классом www, но не соседа с классом test.
$('li.www').siblings(':not(.test)');

// Задачи на родителей

// Для решения задач данного блока вам понадобятся следующие методы: parent, parents, parentsUntil, closest, children, .contents().

//  Найдите родителя элемента с классом test.
$('.test').parent();

//  Найдите родителей всех тегов <b> и сделайте их красным цветом.
$('b').parent().css('color', 'red');

//  Найдите ближайших дивов-родителей всех тегов <b> и сделайте их красным цветом.
$('b').closest('div').css('color', 'red');

// Задачи на find, add, andSelf, end

//  Найдите все <h2> с классом .www, сделайте их красного цвета, затем среди найденных элементов найдите элементы с классом .test и поставьте им размер шрифта в 30px.
$('h2.www').css('color', 'red').find('test').css('fontSize', '30px');

//  Найдите все элементы с классом .www, сделайте их красного цвета, затем среди найденных элементов найдите абзацы и поставьте им в конец текст '!'.
$('.www').css('color', 'red').find('p').append('!');

//  Найдите все абзацы <p> с классом .www, поставьте им в начало текст '!', а в конец текст '!!', затем добавьте к этим абзацам еще и заголовки <h2> и покрасьте эти абзацы и заголовки в красный цвет.
$('.www').prepend('!').append('!!').add('h2').css('color', 'red');

// Задачи на is
// Для решения задач данного блока вам понадобятся следующие методы: is.
//  Найдите все <h2>, проверьте, что среди найденных есть <h2> с классом test.
console.log($('h2').is('.test'));

//  Найдите все элементы непосредственно стоящие после заголовков. Если найденный элемент - абзац, добавьте ему в конец содержимое заголовка над ним.
const $nextSiblings = $(':header').nextAll();
$nextSiblings.each(() => {
	const $this = $(this);
	if ($this.is('p')) {
		$this.append($this.prevAll(':header').text());
	}
});

//  Найдите все элементы непосредственно стоящие после заголовков. Если найденный элемент - не абзац, вставьте под заголовком абзац с таким же содержимым, как и заголовок.

$(':header').nextAll().each(() => {
	if (!$(this).is('p')) {
		$(':header').after('<p>' + $(':header').html() + '</p>');
	}
});
